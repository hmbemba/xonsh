# XONSH WEBCONFIG START
#$XONSH_COLOR_STYLE = 'dracula'
# XONSH WEBCONFIG END

from ast import alias
import os
import subprocess
from pathlib import Path
from FFO.item_class import item
import xonsh
import pprint
import datetime

xontrib load vox
pp = pprint.PrettyPrinter(indent=4)
#$PROMPT = '{user}@{hostname}:{cwd}:{env_name: {}}>' 

$home = Path($HOMEPATH[0])
$HOME = $home
$desktop = Path($HOMEPATH[0]) / "Desktop"
$scripts = $desktop / 'Scripts'
$python = $scripts / 'Python'
$ahk = $scripts / 'AHK'
$env = ${...}
$pwd = os.getcwd
$XONSH_SHOW_TRACEBACK = True

commands = str(Path($XONSHRC[0]).parent / "Commands\commands.py")

def _start(arg):
    if not arg:
        raise Exception("you need an argument")
    subprocess.run(["powershell.exe", f"start-process {arg[0]}"])

def _venv():
    subprocess.run(["python.exe", commands, "make_venv"])
    vox enter "venv"
    subprocess.run(["python.exe", commands, "make_main_dot_py"])
    subprocess.run(["python.exe", commands, "make_vscode_folder"])
    subprocess.run(["python.exe", commands, "make_settings_dot_json"])
    subprocess.run(["python.exe", commands, "make_readme"])
    subprocess.run(["python.exe", commands, "make_gitignore"])
    
    pip install mypy flake8 black pytest
    pip freeze > requirements.txt
    
    git init
    git add . #// this will stage your files for thier first commit
    git status #//see all the files you have staged for commit
    git commit -m "First Commit" #//your first commit with a comment
    
def _gitpush(arg):
    pip freeze > requirements.txt
    git add '.'
    git status
    git commit -m arg
    git push origin master

def _workon(arg):
    import datetime

    tempProjectsFolder = fr"{$desktop}\Temp_Projects"
    date = datetime.datetime.now().strftime(r'%m-%d-%y_%H-%M') #MM-dd-yy_hh-mmtt
    
    name = f"{arg[0]}_{date}"
    fullPath = Path(f"{tempProjectsFolder}\\{name}")


    if arg[0] == "show":
        subprocess.run(["powershell.exe", f"start-process {tempProjectsFolder}"])
        exit
    
    else:
        Path.mkdir(fullPath)
        subprocess.run(["powershell.exe", f"code {fullPath}"])
        exit 

def _commands():
    #pp.pprint(list(__xonsh__.aliases.items())[52:])
    pp.pprint(list(__xonsh__.aliases)[52:])

def _sdb(arg):
    cd fr"{$desktop}\Scripts\Python\Apps\Songdb"
    vox enter venv

def timestamp() -> str:
    dt = datetime.datetime.now()
    return dt.strftime("%m_%d_%Y-%I_%M%p")


def _sp():
    t = timestamp()
    item.mkdir(f"StudioPics_{t}", r"V:\Projects\IG Content\Studio Pics")
    loc = fr"V:\Projects\IG Content\Studio Pics\StudioPics_{t}"
    subprocess.run(["powershell.exe", f'start-process "{loc}"'])
    subprocess.run(["powershell.exe", fr'start-process "C:\ProgramData\Microsoft\Windows\Start Menu\Luminar AI.lnk"'])




#---------------------------------------------------------
# Powershell aliases
aliases['start'] = _start
aliases['ls'] = "powershell -Command ls"
#---------------------------------------------------------
# Code related aliases
## Python
aliases['pf'] = "pip freeze > requirements.txt"
aliases['venv'] = _venv
aliases['acvenv'] = "vox enter venv"
aliases['main'] = "python main.py"

## Xonsh
aliases['ox'] = f"powershell -Command code {Path($XONSHRC[0]).parent}"
aliases['oxrc'] = f"powershell -Command code {Path($XONSHRC[0])}"

# Edgedb
aliases['edb'] = 'edgedb'
aliases['edbm1'] = 'edgedb migration create'
aliases['edbm2'] = 'edgedb migrate'
aliases['edbgetschema'] = 'edgedb describe schema'
aliases['edblist'] = 'edgedb instance list'
aliases['edbstart'] = 'edgedb instance start'

## Git
aliases['gitnew'] = 'gh repo create'
aliases['gitlist'] = 'gh repo list'
aliases['gitpush'] = _gitpush
aliases['clone'] = 'gh repo clone'

## Others
aliases['workon'] = _workon
#---------------------------------------------------------
# Apps
aliases['showapps'] = ['start', fr"{$desktop}\Scripts\Python\Apps"]
aliases['otf'] = ['python', fr"{$desktop}\Scripts\Python\Apps\ObsidianTextFormatter\main.py"]
aliases['inv'] = ['code', fr"{$desktop}\Scripts\Python\Apps\Invoice_App"]
aliases['sdb'] = _sdb
aliases['editsdb'] = ['code', fr"{$desktop}\Scripts\Python\Apps\Songdb"]
aliases['todo'] = ['python', r'C:\Users\hmbem\Desktop\Scripts\Python\Apps\Todo\main.py']
aliases['edittodo'] = ['code', r"C:\Users\hmbem\Desktop\Scripts\Python\Apps\Todo\TaskInstances.py"]

#---------------------------------------------------------
# Meta
aliases['cmds'] = _commands
#-----------------------------------------------------
# Shortcuts
aliases['oscripts'] = "explorer $scripts; exit"
aliases['opython'] = "explorer $python; exit"
aliases['oahk'] = "explorer $ahk; exit"
aliases['helium'] = ['code', fr"{$python}\Apps\helium_WORKING"]
aliases['opysnip'] = ['code', fr"{$ahk}\Code_Snippets\Python_Snippets\Python_Snippets.ahk"]
aliases['rpysnip'] = ['start', fr"{$ahk}\Code_Snippets\Python_Snippets\Python_Snippets.ahk"]

aliases['studiopics'] = _sp#lambda :item.mkdir(f"StudioPics_{timestamp()}", r"V:\Projects\IG Content\Studio Pics")

